(()=>{"use strict";const t=document.getElementById("canvas1"),i=t.getContext("2d");t.width=window.innerWidth,t.height=window.innerHeight,console.log(i);const e=i.createLinearGradient(0,0,t.width,t.height);e.addColorStop(0,"white"),e.addColorStop(.5,"magenta"),e.addColorStop(1,"blue"),i.fillStyle=e,i.strokeStyle="white";const s=document.getElementById("particleCount"),h=document.getElementById("particleSpeed");let a=Number(null==h?void 0:h.value)||5;null==h||h.addEventListener("input",()=>{a=Number(h.value),null==d||d.particles.forEach(t=>t.setSpeed(a))});class r{constructor(t){this.effect=t,this.radius=5*Math.random()+2,this.x=this.radius+Math.random()*(this.effect.width-2*this.radius),this.y=this.radius+Math.random()*(this.effect.height-2*this.radius),this.maxSpeed=a,this.vx=0,this.vy=0,this.setSpeed(a)}setSpeed(t){var i,e;this.maxSpeed=t;const s=Math.atan2(null!==(i=this.vy)&&void 0!==i?i:0,null!==(e=this.vx)&&void 0!==e?e:0),h=Math.random()*t;this.vx=Math.cos(s)*h||(2*Math.random()-1)*t,this.vy=Math.sin(s)*h||(2*Math.random()-1)*t}draw(t){t.beginPath(),t.arc(this.x,this.y,this.radius,0,2*Math.PI),t.fill()}update(){this.x+=this.vx,this.y+=this.vy;const t=Math.hypot(this.vx,this.vy);t>this.maxSpeed&&(this.vx=this.vx/t*this.maxSpeed,this.vy=this.vy/t*this.maxSpeed),this.x>this.effect.width-this.radius&&(this.x=this.effect.width-this.radius,this.vx*=-1),this.x<this.radius&&(this.x=this.radius,this.vx*=-1),this.y>this.effect.height-this.radius&&(this.y=this.effect.height-this.radius,this.vy*=-1),this.y<this.radius&&(this.y=this.radius,this.vy*=-1)}}class n{constructor(t,i){this.canvas=t,this.width=this.canvas.width,this.height=this.canvas.height,this.particles=[],this.numberOfParticles=i,this.createParticles()}createParticles(){this.particles=[];for(let t=0;t<this.numberOfParticles;t++)this.particles.push(new r(this))}handleParticles(t){this.connectParticles(t),this.particles.forEach(i=>{i.draw(t),i.update()})}connectParticles(t){for(let i=0;i<this.particles.length;i++)for(let e=i;e<this.particles.length;e++){const s=this.particles[i].x-this.particles[e].x,h=this.particles[i].y-this.particles[e].y,a=Math.hypot(s,h);if(a<100){t.save();const s=1-a/100;t.globalAlpha=s,t.beginPath(),t.moveTo(this.particles[i].x,this.particles[i].y),t.lineTo(this.particles[e].x,this.particles[e].y),t.stroke(),t.restore()}}}}let d=new n(t,Number(null==s?void 0:s.value)||600);function l(){d=new n(t,Number(s.value)),d.particles.forEach(t=>t.setSpeed(a))}null==s||s.addEventListener("change",()=>{l()}),window.addEventListener("resize",()=>{t.width=window.innerWidth,t.height=window.innerHeight,d.width=t.width,d.height=t.height,l()}),function e(){i.clearRect(0,0,t.width,t.height),d.handleParticles(i),requestAnimationFrame(e)}()})();